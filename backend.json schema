{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "patternProperties": {
    "^[A-Za-z0-9]{24}$": {
      "type": "object",
      "properties": {
        "color": { "type": "string" },
        "image": { "type": "string", "format": "uri" },
        "major": { "type": "string" },
        "name": { "type": "string" },
        "status": { "type": "string" }
      },
      "required": ["color", "image", "major", "name", "status"]
    }
  },
  "properties": {
    "highScore": { "type": "integer" }
  },
  "required": ["highScore"],
  "additionalProperties": false
}

Here's an explanation of the JSON Schema:
"type": "object": This specifies that the JSON data should be an object.
"patternProperties": This is used to define properties based on a regular expression pattern. In this case, we use the pattern ^[A-Za-z0-9]{24}$ to match keys that are 24 characters long and consist of alphanumeric characters. Each matched key is expected to have an object as its value.
Within the pattern properties, we specify the properties for each object within the JSON data:
"color", "major", "name", and "status" are all expected to be strings.
"image" is expected to be a string with the format of a URI.
"required" is used to specify that all the properties within each object are required.
"properties" is used to define properties that are outside the pattern properties. In this case, we have "highScore" as an integer property.
"required" specifies that "highScore" is required in the root of the JSON data.
"additionalProperties": false ensures that no additional properties are allowed in the JSON data apart from those specified in the schema.

